<?xml version='1.0' encoding='UTF-8'?>
<chapter version="5.0"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
  xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:svg="http://www.w3.org/2000/svg" xmlns:mth="http://www.w3.org/1998/Math/MathML"
  xmlns:db="http://docbook.org/ns/docbook">
  <title>Data sets and data entry forms</title>
  <section xml:id="datasets">
    <title>Data sets</title>
    <para>All data entry in DHIS2 is organised through the use of data sets. You can add and edit
      data sets by selecting the Data Sets App. A data set is a collection of data elements grouped
      together for data collection and data export between instances of DHIS2 (e.g. from a district
      office local installation to a national server). </para>
    <para>A data set has a data collection frequency which can be set through the period type
      property. The frequency can be daily, weekly, monthly, quarterly, six-monthly, or yearly.
      Which data elements to include in the data set and the frequency are set in the Add/Edit Data
      set window. In order to use a data set to collect data for a specific orgunit you must assign
      the orgunit to the data set, and this mechanism controls which org units that can use which
      data sets. </para>
    <para>Data sets also are assigned to specific organisation units which will be allowed to enter
      data for all data elements in that data set. You can assign org units to a data set in the
      Data set management by clicking on the blue folder icon, the first icon under Operations, next
      to the data set you would like to modify. Alternatively you can manage orgunit assignments for
      all data sets together in the Data set Assignment Editor (available in the right-side menu). </para>
    <para>A data set has several properties that must be entered when creating a new one. Name,
      short name, code and description should be used to identify and describe the data set. The
      other properties deserve an explanation:</para>
    <itemizedlist>
      <listitem>
        <para>Expiry days: Controls for how long it should be possible to enter data in data entry
          for this data set. Expiry days refer to the number of days after the end date of the
          selected data entry period where the data entry form should be open for entry. After the
          number of days has expired, the data set will be locked for further entry. You can set
          manual exceptions to this using the lock exception functionality in data administration
          module.</para>
        <note>
          <para>If the number of expiry days is set to zero, this will allow data entry into all
            possible historical time periods. </para>
        </note>
      </listitem>
      <listitem>
        <para>Open future periods for data entry: Defines whether it should be possible to enter
          data for future periods and sets the number of future periods which are available for data
          entry. For example, for a monthly data set a value of 2 would allow data for 2 months in
          advance to be entered, which is useful e.g. for population, target and planning data.
        </para>
      </listitem>
      <listitem>
        <para>Days after period to qualify for timely submission: Sets the number of days in which
          data can be entered to be considered &quot;timely.&quot; The amount of timely reports
          submitted can be checked within the Reports-&gt;Reporting Rate Summary option. </para>
      </listitem>
      <listitem>
        <para>Frequency: Defines the frequency of reporting for the particular dataset.</para>
      </listitem>
      <listitem>
        <para>Combination of categories: Allows relevant Category Combination&apos;s to be assigned
          to the dataset. Category option groups and group sets which define these category
          combination&apos;s are discussed in more detail in the data element chapter. </para>
      </listitem>
      <listitem>
        <para>Complete notification recipients: Sets which users should receive a message with a
          notification about this data set being marked as complete in data entry. In this list you
          can select a user group, and all members in this group will receive a notification. The
          message will be delivered through the DHIS messaging system.</para>
      </listitem>
      <listitem>
        <para>Send notification to completing user: Sets whether a notification that the dataset is
          marked as complete in data entry is sent to the user who has entered the data. This
          message is also delivered through the DHIS messaging system.</para>
      </listitem>
      <listitem>
        <para>Approve data: Define whether data for this data set should be Approved. (See the Data
          approval chapter.)</para>
      </listitem>
      <listitem>
        <para>Skip data mart aggregation: Define whether data for this data set should be skipped
          during data mart generation. You should leave this on no, which is the default behavior,
          in most situations. Can be useful if you have limited server resources and are setting up
          new experimental data sets.</para>
      </listitem>
      <listitem>
        <para>Enable for Java mobile client: Sets whether or not the dataset can be used within the
          Java mobile DHIS2 application. </para>
      </listitem>
      <listitem>
        <para>All fields for data elements required: Defines whether it is mandatory to fill all
          values for a data element in data entry if one or more values have been filled. This means
          that if the user enters one data value for a data element in an entry field (i.e. for a
          category option combination), then she must enter data for all fields belonging to that
          data element (i.e. all category option combinations).</para>
      </listitem>
      <listitem>
        <para>Complete allowed only if validation passes: Controls whether it should be possible to
          mark a data entry form as complete only if the validation of that form is successful.
          Default behavior is yes. If set to no, then a user cannot mark the form complete if
          validation fails.</para>
      </listitem>
      <listitem>
        <para>Missing values requires comment on complete: Sets whether or not any missing values
          require comment to justify their absence.</para>
      </listitem>
      <listitem>
        <para>Skip Offline: Controls whether this data entry form should be downloaded and saved in
          the user&apos;s web browser. Normally you should leave this on no, which is the default
          behavior. If you have forms which are rarely used and are very big you can consider
          setting it to yes to speed up initial loading of the data entry module.</para>
      </listitem>
      <listitem>
        <para>Render sections as tabs: For section based data forms, this option will allow you to
          render each section as a tab horizontally above the data set. This is useful for long
          datasets as it allows appropriate sections to be selected quickly without going through
          the entire form. </para>
      </listitem>
    </itemizedlist>
    <para>Your data set will then be ready to be used within the Data Entry App for the org units
      that you have assigned and for periods according to your selected frequency (period
      type).</para>
    <section xml:id="dataSet">
      <title>Data set management</title>
      <para>The data set management function allows you to create new data sets and manage existing
        ones. The dialog can be reached by choosing The Data Set App from the App menu along with
        the Data set option. A sample dialog is displayed below.</para>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" align="center"
              fileref="resources/images/datasets/dataset-management.png"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <itemizedlist>
        <para>Click on the name of the dataset you would like to alter, and a context menu will be
          displayed. You can sort the datasets in ascending/descending alphabetical order using the
          arrow under the &quot;Add new&quot; button. Each of the available functions are described
          below. </para>
        <listitem>
          <para>Add new: Adds a new data set. When pressing this button, you can create a new data
            set. You need to provide a name, short name and frequency. The &quot;Code&quot;
            attribute is optional. Data elements can be added to the &quot;Selected data
            element&quot; list by selecting them individually. and pressing the
              <inlinemediaobject>
                <imageobject>
                  <imagedata fileref="resources/images/dhis2_images/move_right.png"/>
                </imageobject>
              </inlinemediaobject> button. Indicators can also
            be added to data sets and will be available to be placed in custom data entry forms when
            they need to be shown along with data elements on the same data entry form. Press
            &quot;Save&quot; to add the new data set. </para>
        </listitem>
        <listitem>
          <para> Assign organisation units to data sets: This function will allow you to assign
            individual organisational units to a data set. Only organisational units which have been
            assigned to a data set will be allowed to enter data into the data set. </para>
        </listitem>
        <listitem>
          <para>View sections: Allows you to add or remove sections to the dataset as required.
            These sections do not apply to custom forms. </para>
        </listitem>
        <listitem>
          <para>Sharing settings: Assign different rights to the dataset based on user groups and
            user roles.</para>
        </listitem>
        <listitem>
          <para> Edit data set: This will allow you to edit existing data sets, for instance when
            you need to add or remove data elements and indicators to a given data set.</para>
        </listitem>
        <listitem>
          <para>Translate: Allows the dataset name to be translated to another language as required.
          </para>
        </listitem>
        <listitem>
          <para> Translate: Allows you to translate the name of a data set to a different
            language.</para>
        </listitem>
        <listitem>
          <para> Design data entry form. Refer to the section on custom data entry forms for
            detailed information of how to use this function. </para>
        </listitem>
        <listitem>
          <para>Get PDF for Data Entry: Download a PDF file which can be used for offline data
            entry.</para>
        </listitem>
        <listitem>
          <para> Edit compulsory data elements: This dialog will allow you to add or remove data
            elements which will be marked as compulsory during data entry. </para>
        </listitem>
        <listitem>
          <para> Remove: Completely removes a data set from the system. </para>
          <warning>
            <para>Any data set which is deleted from the system is irrevocably lost. All data entry
              forms, and section forms which may have been developed will also be removed. Ensure
              that you have made a backup of your database before deleting any data set in case you
              need to restore it at some point in time.</para>
          </warning>
        </listitem>
        <listitem>
          <para> Show details: Display some informative information about the data set, including
            the number of data elements, the frequency, and which data entry form has been assigned
            to the data set.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Data set categories</title>
      <para>Before reading this section it is recommended to familiarize oneself with the sections
        on categories in the data element chapter. Whereas data element categories can be used for
        capturing disaggregations of data elements, data set categories are used to capture
        information which is common to an entire form.</para>
      <para>To set up categories for data set, start by creating category options, categories and
        category combinations like described in the data element chapter. Make sure that you set the
        type of categories and category combinations to &quot;Attribute&quot;. To assign a category
        combination to a data set, you can select it while creating or updating the data set from
        the &quot;Combination of categories&quot; drop-down box.</para>
      <para>When a data set is linked to a category combination, those categories will be displayed
        as drop-down boxes in the data entry module. Data captured in the form will then be linked
        to the selected category options from those drop-down boxes.</para>
      <para>An scenario for when data set categories are useful is when you need to capture a data
        entry form for a implementing partner organisation and a project. In that case, start by
        creating category options and categories for all partner organisations and projects, before
        linking these in a new category combination. Then, link the category combination to the data
        set (form) for which you need to capture this information. When opening this data set in
        data entry module, the partner organisation and project categories will automatically be
        rendered as drop-down boxes, allowing you to select a specific implementing partner
        organisation and project before continuing to do data entry.</para>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" align="center"
              fileref="resources/images/datasets/dataset-implementing partner-project-categories.png"
            />
          </imageobject>
        </mediaobject>
      </screenshot>
    </section>
  </section>
  <section>
    <title>Data Entry Forms</title>
    <para>Once you have assigned a data set to an orgunit that data set will be made available in
      Data Entry for the orgunits you have assigned it to. A default data entry form will then be
      shown, which is simply a list of the data elements belonging to the data set together with a
      column for inputting the values. If your data set contains data elements with a non-default
      categorycombination, such as age groups or gender then additional columns will be
      automatically generated in the default form based on the different options/dimensions. </para>
    <para>If you use more than one dataelement category combination you will get multiple columns in
      the data entry form with different column headings for the options. In addition to the default
      list-based data entry form there are two more alternatives, the section-based form and the
      custom form.</para>
    <section>
      <title>Section forms</title>
      <para>Section forms allow for a bit more flexibility when it comes to using tabular forms and
        are quick and simple to design. Often your data entry form will need multiple tables with
        subheadings, and sometimes you need to disable (grey out) a few fields in the table, both of
        these functions are supported in section forms. This function can be accessed by choosing
        selecting the dataset and choosing the &quot;View sections&quot; option from the context
        menu.</para>
    </section>
    <section xml:id="dataSetSection">
      <title>Adding a new section form</title>
      <para>Section forms are separated automatically by data element category combinations, which
        produce a spreadsheet like data entry form for each section. </para>
      <para>When designing a section form the procedure is as follows:</para>
      <orderedlist>
        <listitem>
          <para> Set up your data set as described in <xref linkend="datasets"/></para>
        </listitem>
        <listitem>
          <para>Open the Data Set Section window by selecting your data set followed by the
            &quot;View sections&quot; option from the context menu. To add a new section to a
            section form choose the specific category combo and press &quot;Add new&quot;. You can
            now add data elements from the &quot;Available data element&quot; list on the left to
            the &quot;Selected data elements&quot; list on the right. Data elements can be sorted
            within the section with the use of the &quot;Move up&quot; 
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="resources/images/dhis2_images/move_up.png"/>
              </imageobject>
            </inlinemediaobject> and &quot;Move down&quot;
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="resources/images/dhis2_images/move_down.png"/>
              </imageobject>
            </inlinemediaobject> buttons. Be
            sure to press &quot;Save&quot; once you have finished.<note>
              <para>You can only use one data element category combination per section. </para>
            </note></para>
        </listitem>
        <listitem>
          <para> You may need to control how the data element sections are displayed on the final
            form. In the Data set Section management, leave [All] in the &quot;Select Category
            Combo&quot; drop-down. Click on &quot;Sort section&quot; to sort the order of appearance
            of your sections in the data entry form.</para>
        </listitem>
        <listitem>
          <para>In Data Entry you can now start using the Section form (which will appear
            automatically when sections are available for the selected data set). Data sets which
            have section forms will automatically display the section form.</para>
        </listitem>
        <listitem>
          <para>Certain data elements may need to be disabled for data entry. Within Data set
            section management, choose the section which contains these data elements and select
            Section grey field management from the context window. Pressing the &quot;Disable&quot;
            button will prevent data from being entered into this specific data element/category
            option during data entry. Be sure to press &quot;Done&quot; to save your changes.</para>
          <screenshot>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" align="center"
                  fileref="resources/images/datasets/sectionform_grey_field_management.png"/>
              </imageobject>
            </mediaobject>
          </screenshot>
        </listitem>
      </orderedlist>
      <para>A sample section form is displayed in the next figure. Notice how each data element
        category has been separated into a separate section, and a data entry table has been
        automatically generated by the system. Use of section forms in combination with data element
        categories can drastically reduce the amount of time which is required to create data entry
        forms for data sets.</para>
      <screenshot>
        <title>Section form example</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" align="center"
              fileref="resources/images/dhis2UserManual/section_form.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </section>
    <section xml:id="customDataEntryForm">
      <title>Custom Forms</title>
      <para>When the form you want to design is to complicated for the default or section forms then
        your last option is to use a custom form. This takes more time, but gives you full
        flexibility in term of the design. DHIS2 uses a built-in HTML editor (FcK Editor) for the
        form designer and you can either design the form in the UI or paste in your HTML directly
        (using the Source window in the editor). A complete reference for use of the editor can be
        found <link xmlns:xlink="http://www.w3.org/1999/xlink"
          xlink:href="http://docs.cksource.com/CKEditor_3.x/Users_Guide">here</link>.</para>
      <para>One of the big advantages of custom forms, is that they can be created to mimic existing
        paper aggregation forms. This makes data entry much easier for users, and should reduce the
        number of data elements which are incorrectly entered, as they are more easily identifiable
        when entering data from a paper form. </para>
      <para>Once a custom form has been added to a data set it will be available in data entry and
        used automatically. </para>
      <note>
        <para>Custom forms are preferentially displayed over section forms. If a data set has both a
          section form and a custom form, the custom form will be displayed during data entry. Users
          will not be able to select which method they wish to input data, so be sure that your
          custom form contains all data elements which may be required. However, if using a mobile
          interface, sections forms will display preferentially over custom forms; therefore both
          can be used to support data collection depending on the method of data entry. </para>
      </note>
      <para>To add a custom form design to a data set then first locate your data set in the Data
        set Management window and click on the Design data entry form from the context menu.</para>
      <para>First provide a Name for the form. There are a few important buttons in the Editor that
        you must pay special attention to. The icon with four outward arrows is the full screen mode
        on/off button, which can be very useful. The there is a Source button that shows the HTML
        code for your form. </para>
      <para>If you already have the HTML for your form then you should start by pasting it in here.
        Click on Source again to go back to preview/non-HTML mode. A blue icon under the editor
        window, &quot;Insert data elements,&quot; allows you to add data elements to the
        form.</para>
      <para>All the input fields need to have a link to a data element or indicator. To add new data
        elements to the form, double-click them from the data element/indicator box as shown below.
        You can also select a data element/indicator and press the &quot;+Insert&quot; button. You
        can switch between either data elements, totals for or indicators by pressing the respective
        buttons.</para>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata width="50%" align="center"
              fileref="resources/images/datasets/custom_forms_data_elements1.png"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <para>You can save by clicking on the Save button, and this will not close the window. It is
        recommended to save often to ensure you do not loose your work. </para>
      <para>When you are done or want to test your form in data entry click on &lt;Save and
        close&gt;.</para>
    </section>
    <section>
      <title>Scripting in custom forms</title>
      <para>In custom data entry form you can use javascript to create dynamic behavior and
        customziations. The DHIS 2 data entry module provides a range of events which you can
        register for and use to perform actions at certain times. The events are registered on the
        document element. The jQuery event object and the data set identifier are always the first
        two arguments provided to the callback functions. The table below provides an overview of
        the events and when they are triggered.</para>
      <table frame="all">
        <title>Data entry events</title>
        <tgroup cols="3">
          <colspec colnum="1" colname="c1" colwidth="1*"/>
          <colspec colnum="2" colname="c2" colwidth="1.66*"/>
          <colspec colnum="3" colname="newCol3" colwidth="1.81*"/>
          <thead>
            <row>
              <entry>Key</entry>
              <entry>Description</entry>
              <entry>Arguments</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>dhis2.de.event.formLoaded</entry>
              <entry>Triggered after the data entry form is rendered, but before data values are set
                in entry fields.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.de.event.dataValuesLoaded</entry>
              <entry>Triggered after data values are set in entry fields.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.de.event.formReady</entry>
              <entry>Triggered when the data entry form is completely rendered and loaded with all
                elements.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.de.event.dataValueSaved</entry>
              <entry>Triggered when a data value is saved successfully.</entry>
              <entry>Event | Data set ID | Data value object</entry>
            </row>
            <row>
              <entry>dhis2.de.event.completed</entry>
              <entry>Triggered when a data set is successfully marked as complete.</entry>
              <entry>Event | Data set ID | Complete registration object</entry>
            </row>
            <row>
              <entry>dhis2.de.event.uncompleted</entry>
              <entry>Triggered when a data set is successfully marked as incomplete.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.de.event.validationSuccess</entry>
              <entry>Triggered when validation is done and there were no violations.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.de.event.validationError</entry>
              <entry>Triggered when validation is done and there were one or more
                violations.</entry>
              <entry>Event | Data set ID</entry>
            </row>
            <row>
              <entry>dhis2.ou.event.orgUnitSelected</entry>
              <entry>Triggered when one or more organisation units are selected in the org unit web
                tree.</entry>
              <entry>Event | Org unit IDs | Org unit names | Sub org unit IDs</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>To register for such an event:</para>
      <screen>&lt;script type=&quot;text/javascript&quot;&gt;

dhis2.util.on( &apos;dhis2.de.event.formReady&apos;, function( event, ds ) {
  console.log( &apos;The form with id: &apos; + ds + &apos; is loaded!&apos; );
} );

dhis2.util.on( &apos;dhis2.de.event.dataValueSaved&apos;, function( event, ds, dv ) {
  console.log( &apos;Data value: &apos; + dv.value + &apos; was saved with data element: &apos; + dv.de );
} );

dhis2.util.on( &apos;dhis2.de.event.completed&apos;, function( event, ds, cr ) {
  console.log( &apos;Form was completed for org unit: &apos; + cr.ou );
} );

&lt;/script&gt;</screen>
      <para>Be careful to only use &quot;namespaced&quot; events like the ones in the example above
        and not general ones like &quot;click&quot; as the dhis2.util.on method will unregister the
        event first.</para>
      <para>If your function only applies to certain data sets you can use the supplied data set
        identifier and shortcut your function for unwanted data sets like this:</para>
      <screen>dhis2.de.on( &apos;dhis2.de.event.validationSuccess&apos;, function( event, ds ) {
  if ( $.inArray( ds, [&apos;utXOiGbEj14&apos;, &apos;Re7qzHEThSC&apos;] ) == -1 ) {
    return false;
  }
  console.log( &apos;Form with id: &apos; + ds + &apos; validated successfully!&apos; );
} );</screen>
      <para>The identifiers of the input fields in the data entry form is on the format described
        below. This format can be used to select the input fields in your script and perform actions
        on them:<screen>&lt;dataelementid&gt;-&lt;optioncomboid&gt;-val</screen></para>
      <para>Since the data set identifier is provided for all events a feasible alternative is to
        utilize the &quot;files&quot; Web API resource and keep your callback functions in a single
        file, where you let the javascript code take action based on which data set is currently
        loaded.</para>
    </section>
    <section xml:id="dataSetAssignmentEditor">
      <title>Data set assignment editor</title>
      <para>The data set assignment editor is a tool for adding and removing many data sets to
        organisation units in batch style. Start by selecting an organisation unit from the
        selection tree. In the area below the tree a grid will be displayed showing all data sets as
        columns and the child organisation units as rows.</para>
      <para>From the grid you can now assign or unassign data sets simply by clicking on of the
        corresponding icons in the grid. If you want to assign or unassign an organisation unit to
        all data sets you can check or uncheck the checkbox next to the organisation unit. Your
        changes will automatically be saved.</para>
    </section>
  </section>
</chapter>
