<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" []>
<chapter>
  <title>¿Qué es DHIS2?</title>
  <highlights>
    <para>Después de leer este capítulo habremos comprendido:</para>
    <itemizedlist>
      <listitem>
        <para>Qué es DHIS2 y qué finalidad tiene en el marco de los Sistemas de Información de Salud (SIS)</para>
      </listitem>
      <listitem>
        <para>Cuáles son las principales consideraciones tecnológicas que deberemos tener en cuenta para desplegar un sistema basado en DHIS2, y qué opciones existen para ampliar el aplicativo DHIS2 con nuevos módulos</para>
      </listitem>
      <listitem>
        <para>Qué diferencias hay entre datos agregados y datos de paciente</para>
      </listitem>
      <listitem>
        <para>Qué beneficios y dificultades conlleva la utilización de software libre y de código abierto (FOSS) en un SIS</para>
      </listitem>
    </itemizedlist>
  </highlights>
  <section xml:id="mod1_1">
    <title>Antecedentes de DHIS2</title>
    <para>DHIS2 es una herramienta para la recolección, validación, análisis y presentación de datos estadísticos agregados, hecho a medida de (pero no limitado a) actividades de gestión integral de información de salud. Es más una herramienta genérica que una aplicación de base de datos preconfigurada, con un modelo de metadatos abierto y una interfaz de usuario flexible que permite al usuario diseñar los contenidos de un sistema específico de información sin necesidad de códigos de programación. DHIS2 y sus extensiones son un paquete software web y modular elaborado con entornos de código libre y abierto Java.</para>
    <para>DHIS2 es software de código abierto publicado bajo la licencia BSD y puede utilizarse sin coste alguno. Funciona en cualquier plataforma que tenga instalado JRE 6 (o una versión superior). Simplemente se descarga (de dhis2.org), se desempaqueta, se lanza el fichero ejecutable y estamos listos para comenzar.</para>
    <para>DHIS2 ha sido desarrollado por el Health Information Systems Programme (HISP) en un proceso abierto y distribuido globalmente con desarrolladores que actualmente están en India, Vietnam, Tanzania, Irlanda y Noruega. El desarrollo está coordinado desde la Universidad de Oslo con un soporte principal de Norad.</para>
    <para>En Octubre de 2012, el software DHIS2 se utiliza en los sistemas de salud de más de 30 países en África, Asia y Latinoamérica, y entre los países que han adoptado DHIS2 como software de SIS nacional están KEnia, Tanzania, Uganda, Ruanda, Ghana, Liberia y Bangladesh. Un número creciente de países y organizaciones esán comenzando nuevos despliegues con DHIS2.</para>
    <para>La documentación ofrecida aquí trata de ofrecer una panorámica global de la aplicación. Dada la naturaleza abstracta de la aplicación, este manual no sirve como una guía paso a paso detallada de cómo utilizar la aplicación en cada circunstancia, sino más bien ofrece ilustraciones y ejemplos de cómo DHIS2 puede implementarse en varias situaciones mediante ejemplos generalizados.</para>
    <para>Antes de implementar DHIS2 en un nuevo despliegue, recomendamos fuertemente la lectura de la Guía de Implementación de DHIS2 (un manual distinto de este), también disponible en dhis2.org.</para>
  </section>
  <section>
    <title>Las características clave y el propósito de DHIS 2</title>
    <para>Las características clave y el propósito de DHIS2 pueden resumirse como sigue:</para>
    <itemizedlist>
      <listitem>
        <para>Ofrecer una solución SIS exhaustiva focalizada en principios de almacenamiento de datos y en una estructura modular que puede personalizarse fácilmente para las distintas necesidades de los sistemas de salud - y sostiene la idea de un SIS integrado a todos los niveles de la jerarquía de salud.</para>
      </listitem>
      <listitem>
        <para>Capacidad para personalizar y adaptar localmente mediante el interfaz de usuario. No es preciso programar código para empezar a utilizar DHIS2 en un nuevo despliegue (país, región, distrito, etc.).</para>
      </listitem>
      <listitem>
        <para>Ofrecer herramientas de entrada de datos que pueden ser del tipo de listas o tablas estándar, o que pueden ser personaliadas para replicar los formularios en papel.</para>
      </listitem>
      <listitem>
        <para>Ofrecer diferentes tipos de herramientas para la validación de los datos y para la mejora de la calidad de los datos.
    </para>
      </listitem>
      <listitem>
        <para>Ofrecer reportes fáciles de usar en un sólo click, con gráficas y tablas para los indicadores seleccionados o reportes resumen utilizando el diseño de las herramientas de recolección de datos. También es posible la integración con herramientas de diseño de reportes externas y populares como iReport o BIRT, permitiendo a los usuarios añadir más reportes personalizados de forma flexible y accesibles a todos los usuarios.</para>
      </listitem>
      <listitem>
        <para>Análisis de datos flexible y dinámico (en tiempo real) en la herramienta de Visualizador de Datos y en el módulo SIG.</para>
      </listitem>
      <listitem>
        <para>Un panel de control (dashboard) para cada usuario con acceso rápido a las herramientas relevantes de monitoreo y evaluación incluidas las gráficas de indicadores y enlaces a los reportes favoritos, mapas y otros recursos clave en el sistema.</para>
      </listitem>
      <listitem>
        <para>Interfaces de usuario sencillas de utilizar para la gestión de metadatos, por ejemplo para añadir o editar sets de datos o establecimientos de salud. No es necesaria la programación de código para poner en marcha el sistema en un nuevo despliegue.</para>
      </listitem>
      <listitem>
        <para>Funcionalidad para diseñar y modificar las fórmulas calculadas de los indicadores.</para>
      </listitem>
      <listitem>
        <para>Módulo de gestión de usuarios para las contraseñas, seguridad y control fino de acceso (roles de usuario).</para>
      </listitem>
      <listitem>
        <para>Es posible enviar mensajes a los usuarios del sistema de cara a obtener retroalimentación y avisos. Los mensajes también pueden entregarse en formato de email y como SMS.</para>
      </listitem>
      <listitem>
        <para>Los usuarios pueden compartir y discutir sus datos en gráficas y reportes utilizando "Interpretaciones", favoreciendo una comunidad de usuarios con base activa en la información.</para>
      </listitem>
      <listitem>
        <para>Funcionalidades de exportación-importación de datos y metadatos, apoyando la sincronización de las instalaciones offline así como la interoperabilidad con otras aplicaciones.</para>
      </listitem>
      <listitem>
        <para>Integración con otros sistemas software - utilizando el API-Web de DHIS2 y el Motor de Integración.</para>
      </listitem>
      <listitem>
        <para>Existe la posibilidad de desarrollar e integrar nuevos módulos para dar respuesta a necesidades específicas de los usuarios, ya sea como parte del interfaz de usuario del portal de DHIS2 o como una aplicación externa acoplada que interactúe a través del API-Web de DHIS2.</para>
      </listitem>
    </itemizedlist>
    <para>En resumen, DHIS2 facilita una solución integral de SIS para las necesidades de reporte y análisis de los usuarios de información de salud a cualquier nivel.</para>
  </section>
  <section>
    <title>Utilización de DHIS2 en el SIS: registro, procesado, interpretación y análisis de los datos</title>
    <para>El contexto amplio de un SIS puede entenderse integralmente mediante el ciclo de la información presentado en la Figura 1.1. El ciclo vida de la información plasma gráficamente los distintos componentes, etapas y procesos por los cuales los datos se recogen, comprueban según calidad, procesan, analizan y utilizan.</para>
    <figure>
      <title>El ciclo de vida de la información en salud</title>
      <mediaobject>
        <imageobject>
          <imagedata width="60%" align="center" fileref="resources/images/dhis2UserManual/dhis2_information_cycle.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>DHIS2 participa en las diferentes facetas del ciclo de vida de la información, donde se incluyen:
      <itemizedlist>
        <listitem>
          <para>Recogida de datos.</para>
        </listitem>
        <listitem>
          <para>Realización de chequeos de calidad.</para>
        </listitem>
        <listitem>
          <para>Acceso a los datos a múltiples niveles.</para>
        </listitem>
        <listitem>
          <para>Reporte.</para>
        </listitem>
        <listitem>
          <para>Elaboración de gráficas, mapas y otras formas de análisis.</para>
        </listitem>
        <listitem>
          <para>Posibilidad de comparaciones a lo largo del tiempo (por ejemplo, frente a meses anteriores) y del espacio (por ejemplo, entre distintos establecimientos y distritos).</para>
        </listitem>
        <listitem>
          <para>Detección de tendencias (mostrando datos en series temporales para verificar niveles máximos y mínimos tolerados).
          </para>
        </listitem>
      </itemizedlist>
  </para>
    <para>En un primer paso, DHIS2 sirve como herramienta para la recogida, registro y compilación de datos, y todos los datos (ya sea en forma de números o texto) pueden introducirse en la aplicación. La entrada de datos puede hacerse en listas de elementos de datos o mediante formularios definidos por los usuarios, que pueden elaborarse a imagen y semejanza de los formularios en papel para facilitar a los usuarios el proceso de registro de datos.</para>
    <para>En un segungo paso, DHIS2 puede utilizarse para aumentar la calidad de los datos. Por un lado, en los puntos de entrada de datos puede realizarse un chequeo para verificar si los datos cuadran en rangos aceptables entre valores máximos y mínimos para cada elemento de datos particular. Este chequeo puede ayudar, por ejemplo, a identificar errores producidos al momento de meter los datos. Por otro lado, los usuarios pueden definir reglas de validación, y DHIs2 puede lanzar comprobaciones de estas reglas de validación sobre los datos para detectar infracciones.</para>
    <para>Luego, cuando ya se han introducido y verificado los datos, DHIS2 puede ayudar a realizar diferentes tipos de reportes. El primer tipo de reporte es el rutinario que necesita ser predefinido, de modo que todos los reportes que sean generados en rutina puedan obtenerse con un click. Adrmás, DHIS2 puede ayudar en la generación de reportes analíticos mediante por ejemplo comparaciones de indicadores en distintos establecimientos de salud o a lo largo del tiempo. Algunas de las salidas de análisis que puede producir DHIS2 son gráficas, mapas, reportes y perfiles de salud. Todos ellos deberían ser producidos, analizados y servir de base para intervenciones de salud por parte de los gestores de salud.</para>
  </section>
  <section>
    <title>Antecedentes tecnológicos</title>
    <section>
      <title>DHIS2 como plataforma</title>
      <para>DHIS2 puede entenderse como una plataforma con muchos niveles. Primero, la base de datos de la aplicación está diseñada de abajo a arriba con un enfoque de flexibilidad. Las estructuras de datos como son los elementos de datos, las unidades organizativas, los formularios y los roles de los usuarios pueden definirse de forma totalmente libre desde el interfaz de usuario de la aplicación. Esto posibilita que el sistema pueda adaptarse a múltiples contextos locales y casos de uso. Hemos visto que DHIS2 soporta los requisitos más importantes para la captura y el análisis rutinarios de datos necesarios en implementaciones nacionales. Esto hace que DHIS2 pueda servir también como sistema de gestión para dominios específicos como logística, laboratorios y contabilidad.</para>
      <para>En segundo lugar, gracias a su diseño modular DHIS2 puede extenderse con módulos software adicionales. Estos módulos software pueden convivir con los módulos centrales de DHIS2, e integrarse en el portal DHIS y en el sistema de menús. Es una caractarística potente que permite extender el sistema con funcionalidad extra cuando se requiera, típicamente para requisitos específicos del país, como se apuntó anteriormente.</para>
      <para>La otra cara del módulo de extensión software es que impone varias limitaciones al proceso de desarrollo. Los desarrolladores que crean funcionalidad extra están limitados a la tecnología DHIS en términos de lenguaje de programación y de entornos software, además de las limitaciones ya mencionadas para el diseño de los módulos para la solución de portal web DHIS. Estos módulos deben incluirse en el software DHIS cuando se compila el software y se despliega en un servidor, no se pueden añadir dinámicamente en tiempo de ejecución.</para>
      <para>Para superar estas limitaciones y lograr un acercamiento entre el nivel de servicio DHIS y otras piezas adicionales de software, el equipo de desarrollo de DHIS decidió crear el API Web. Este API-Web cumple con las normas de estilo arquitectónico REST. Esto implica que:</para>
      <itemizedlist>
        <listitem>
          <para>El API Web proporciona un interfaz navegable y también de lenguaje-máquina para completar el modelo de datos DHIS. Por ejemplo, podemos acceder a la lista completa de elementos de datos, luego navegar utilizando el hipervínculo a un elemento de datos que nos interese en particular, luego navegar utilizando el hipervínculo a la lista de formularios de los cuales este elemento de datos forma parte. Por ejemplo, los clientes solo harán transiciones de estado utilizando hipervínculos que se incrustan dinámicamente en las respuestas de la base de datos.</para>
        </listitem>
        <listitem>
          <para>Los datos son accedidos mediante un interfaz uniforme (URLs) utilizando un protocolo reconocido. No hay formatos o protocolos de transporte extravagantes - solo el protocolo HTTP ampliamente probado y entendido, que es el bloque fundamental de la Web actual. Esto implica que los desarrolladores de terceros pueden desarrollar software utilizando el modelo de datos y los datos de DHIS sin conocer la tecnología específica o sin cumplir a las restricciones de diseño de DHIS.</para>
        </listitem>
        <listitem>
          <para>Todos los datos incluidos metadatos, reportes, mapas y gráficas, que consideramos "recursos" en terminología REST, pueden obtenerse en los formatos de representación de datos más populares de la Web como HTML, XML, JSON, PDF y PNG. Estos formatos son ampliamente soportados en aplicaciones y lenguajes de programación y permiten a los desarrolladores de terceros un amplio abanico de opciones de implementación.</para>
        </listitem>
      </itemizedlist>
      <graphic fileref="resources/images/implementation_guide/dhis_platform.png" format="PNG" width="80%" align="center"/>
    </section>
    <section>
      <title>Comprendiendo la independencia de plataforma</title>
      <para>Todas las computadoras tienen un Sistema Operativo (SO) para manejarlas y manejar los programas instalados. El sistema operativo sirve como nivel intermedio entre la aplicación software, como DHIs2, y el hardware, como la CPU o la memoria RAM. DHIS2 funciona en la Máquina Virtual de Java, y por eso puede funcionar en cualquier sistema operativo que soporte Java. La independencia de plataforma significa que la aplicación software puede ejecutarse en cualquier SO: Windows, Linux, Macintosh, etc. DHIS2 es independiente de plataforma, y es extremadamente útil en el contexto de salud pública, donde pueden estar en uso múltiples sistemas operativos distintos.</para>
      <para>Más allá, DHIS2 es también independiente de plataforma en relación al Sistema de Gestión de Base de Datos. DHIS2 utiliza el entorno de abstracción de bases de datos Hibernate y es compativle con cualquier sistema soportado por Hibernate, como PostgreSQL, MySQL, H2, MS SQL Server, Oracle y muchos otros. PostgreSQL es el sistema de base de datos recomendado para DHIS2.</para>
    </section>

    <section>
      <title>Estrategias de despliegue - conectado (online) o desconectado (offline) </title>
      <para>DHIS2 es una aplicación en red y puede ser accedida a través de Internet, en una intranet local y como un sistema instalado localmente. Las alternativas de despliegue de DHIS se definen en este capítulo como (1) despliegue offline (desconectado) (2) despliegue online (conectado) y (3) despliegue híbrido. El significado de cada una y las diferencias entre ellas se detallan en las secciones siguientes.</para>
    <section>
    <title>Despliegue Offline (Desconectado)</title>
    <para>Un despligue offline implica que instalamos muchas instancias autónomas offline para los usuarios finales, generalmente a nivel de distrito. El sistema lo mantienen principalmente los usuarios, trabajadores de salud en distrito, que introducen los datos y generan reportes utilizando su servidor local. Típicamente hay también un equipo de superusuarios a nivel nacional que mantiene el sistema y realizar visitas regularmente a los despliegues en distritos. Los usuarios envían los datos hacia arriba en la jerarquía produciendo ficheros de intercambio de datos que se envían electrónicamente por email o físicamente por correo convencional o viajes del personal. Notemos que aunque haya una conexión reducida a Intenret para enviar emails, puede no ser suficiente para que el sistema sea online. Esta forma de despliegue tiene el beneficio claro de que funciona cuando no disponemos de una conectividad de Internet apropiada. Por otro lado hay algunos retos significativos en esta forma de desplique, que se describen a continuación.</para>
    <itemizedlist>
      <listitem>
        <para>Hardware: Tener en funcionamiento sistemas autónomos requiere un hardware más avanzado en términos de instalar servidores y suministro eléctrico fiable, generalmente a nivel de distrito, en todo el país. Esto requiere una financiación apropiada para la adquisición de equipos y la planificación de mantenimiento a largo plazo.</para>
      </listitem>
      <listitem>
        <para>Plataforma software: Las instalaciones locales implican una necesidad importante de mantenimiento. De la experiencia de HISP, el mayor reto son los viruses y otros malwares que tienden a infectar las instalaciones locales a largo plazo. La razón principal para esto es que los usuarios utilizan dispositivos de memoria externa USB para transportar los ficheros de intercambio de datos y documentos entre computadoras privadas, otras computadoras de red y el sistema en el que funciona la aplicación DHIS. Mantener sofware antivirus y parches de sistema operativo actualizados en un entorno offline es dificultoso y una mala práctica en términos de seguridad muy común entre los usuarios. Tal vez la mejor manera de evitar esto es lanzar un servidor dedicado para la aplicación donde no se utilicen memorias externas y se utilice un sistema operativo basado en Linux, que no sea susceptible de infecciones de virus como lo es MS Windows.</para>
      </listitem>
      <listitem>
        <para>Aplicación software: Ser capaces de distribuir nuevas funcionalidades y resolución de <emphasis role="italic">bugs</emphasis> a los usuarios del software de información de salud es esencial para el mantenimiento y la mejora progresiva del sistema. Delegar en los usuarios finales la tarea de actualizar el software implica que ellos reciban una formación extensiva y un altísimo nivel de competencias de aquel lado, ya que las actualizaciones software pueden incluir alguna tarea técnicamente ariesgada. Delegar en el equipo nacional de superusuarios la tarea de mantener el software directamente, implicará muchos viajes.</para>
      </listitem>
      <listitem>
        <para>Mantenimiento de la base de datos: Un requisito previo para lograr un sistema eficiente es que todos los usuarios introduzcan datos con un set estandarizado de metadatos (elementos de datos, formularios, etc.). Aquí sucede algo parecido al punto anteriormente comentado sobre actualizaciones de software: la distribución de cambios en el set de metadatos en gran número de instalaciones offline requiere usuarios finales muy competentes si las actualizaciones se envían digitalmente o bien un equipo de superusuarios muy bien organizado. Si hay un fallo al mantener la sincronización del set de metadatos, conllevará la pérdida de capacidad para enviar datos desde los distritos y/o una base de datos nacional inconsistente, ya que los datos introducidos por ejemplo a nivel de distrito, no serán compatibles con los datos a nivel nacional.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Despliegue Online (Conectado)</title>
    <para>Un despliegue online implica que una sola instancia de la aplicación DHIS se instala en un servidor conectado a Internet. Todos los usuarios (clientes) se conectan con el servidor central online a través de Internet utilizando un navegador web. Este estilo de implementación suele beneficiarse de las grandes inversiones y extensiones de las redes de comunicaciones de acceso: móviles (celular) y de banda ancha en países en desarrollo. Esto posibilita el acceso a servidores online incluso en las áreas más rurales utilizando modems de Internet móvil (también llamadas <emphasis role="italic">dongles</emphasis>).</para>
    <para>Esta forma de despliegue online tiene implicaciones muy positivas en el proceso de implementación y en el mantenimiento de la aplicación en comparación con el estilo tradicional desconectado:</para>
    <itemizedlist>
      <listitem>
        <para>Hardware: Los requisitos hardware del lado del usuario se limitan a una computadora o portátil (laptop) razonablemente modernos, y conexión a Internet a través de línea fija o módem celular. No hay necesidad de tener servidores especializados del lado del usuario, sino que cualquier computadora que pueda navegar es suficiente.</para>
      </listitem>
      <listitem>
        <para>Plataforma software: Los usuarios solo necesitan un navegador web para conectarse al servidor online. Hoy en día todos los sistemas operativos populares vienen con un navegador web ya instalado y no hay ningún requisito especial sobre qué tipo o versión de navegador. Lo que esto significa es que si hay problemas graves como infecciones de virus o corrupción del software en esa computadora, siempre podremos recurrir a reformatear e instalar de nuevo el sistema operativo o comprar una computadora nueva. En tal caso, el usuario podrá seguir introduciendo datos donde lo dejó y no se habrá perdido ningún dato.</para>
      </listitem>
      <listitem>
        <para>Aplicación software: El estilo de despliegue online, es decir, basado en un servidor central, significa que podemos actualizar y mantener la aplicación de manera centralizada. Cuando salen nuevas versiones de DHIS con nuevas funcionalidades y resoluciones de bugs, esto puede aplicarse únicamente al servidor online. Y todos los cambios se reflejarán en el lado del cliente la próxima vez que los usuarios se conecten al servidor a través de Internet. Obviamente, esto tiene un impacto enormemente positivo en el proceso de mejorar el sistema ya que las nuevas funcionalidades se distribuyen inmediatamente a los usuarios, todos los usuarios estarán siemrpe accediendo a la misma versión de la aplicación, y los bugs y complicaciones pueden resolverse e implantarse al momento.</para>
      </listitem>
      <listitem>
        <para>Mantenimiento de la base de datos: De forma similar al punto anteior, los cambios en los metadatos se hacen en el servidor online de forma centralizada y se propagan automáticamente a todos los clientes la próxima vez que se conecten al servidor. Esto efectivamente elimina los vastos problemas relacionados con mantener un set de metadatos actualizado y estandarizado, como sucede en el despliegue offline. Por ejemplo es muy conveniente este estilo durante la fase inicial de desarrollo de la base de datos y durante los procesos anuales de revisión de la base de datos, ya uqe los usuarios estarán accediendo a una base de datos consistente y estandarizada incluso cuando en ella se están produciendo cambios frecuentes.</para>
      </listitem>
    </itemizedlist>
    <para>Este enfoque puede ser problemático en los casos en los que la conexión a Internet es volatil o insuficiente durante largos periodos de tiempo. Sin embargo, DHIS 2 dispone de algunas características que permiten que el requisito de conexión a Internet solo sea necesario en momentos concretos para que el sistema funcione bien, como la herramienta MyDatamart que se explica en un capítulo específico de este Manual.</para>
  </section>
  <section>
    <title>Despliegue Híbrido</title>
    <para>De la discusión de los puntos anteriores, uno puede darse cuenta de que el estilo de despliegue online es más favorable que el despliegue desconectado, pero requiere conexión a Internet allá donde se use. Es importante tomar en cuenta que los estilos mencionados también pueden coexistir en un un despliegue común. Es perfectamente factible tener despliegues online y offline en un mismo país. La norma general sería que los distritos y establecimientos deberían acceder al sistema online a través de Internet siempre que exista conexión suficiente, y habrá sistemas offline en aquellos distritos donde no se dé el caso.</para>
    <para>Es difícil definir con precisión cómo es una conexión a Internet suficiente pero podemos poner como regla práctica que la velocidad de descarga debería ser mínimo 10 Kbyte/seg y la disponibilidad devería ser como mínimo el 70% del tiempo. </para>
    <para>En este sentido los modems de Internet por celular que se puedan conectar a una computadora o portátil para acceder a la red celular son una solución factible y suficiente. La cobertura de Internet móvil está aumentando rápidamente en todo el mundo, con frecuencia ofreciendo una conectividad buena a precios asequibles y es una alternativa a las redes locales y poco mantenidas de líneas fijas de Internet. Puede resultar un esfuerzo que vale la pena el contactar con las compañías de red móvil nacional y negocias suscripciones de postpago y beneficios potenciales de economía de escala. Es conveniente estudiar la cobertura de red para cada operador de red de telecomunicaciones en el país concreto, a la hora de decidir qué tipo de despliegue arrancar, ya que podrá ser diferente en distintas regiones del país.</para>
  </section>
  <section>
    <title>Alojamiento del servidor</title>
    <para>El enfoque de despliegue online plantea la cuestión de dónde y cómo alojar el servidor que ejecutará la aplicación DHIS2. Típicamente hay varias opciones posibles:</para>
    <orderedlist>
      <listitem>
        <para>Alojamiento interno en el Ministerio de Salud</para>
      </listitem>
      <listitem>
        <para>Alojamiento en un centro gubernamental de datos</para>
      </listitem>
      <listitem>
        <para>alojamiento a través de una compañía externa de hosting</para>
      </listitem>
    </orderedlist>
    <para>La razón principal para elegir la primera de las opciones es a menudo la motivación política de tener "propiedad física" de la base de datos. Muchos perciben esto como algo importante de cara a "poseer" y controlar los datos. Existe también el deseo de desarrollar capacidad local para la administración del servidor relacionada con la sostenibilidad del proyecto. Esto suele darse en iniciativas lideradas por donantes que perciben así la misión más concreta y servicial.</para>
    <para>En cuanto a la segunda opción, en algunos lugares se construye un centro gubernamental de datos con la visión de promover y mejorar el uso y acceso a los datos públicos. Otra razón puede ser que la proliferación de entornos internos de servidos demanda muchos recursos y es más eficiente establecer una infraestructura y capacidad centralizadas.</para>
    <para>Sobre el alojamiento externo, hay recientemente un movimiento hacia la externalización de la operación y administración de recursos informáticos a proveedores externos, donde se accede a esos recursos a través de la red, en lo que se llama popularmente "cloud computing" o "computación en la nube". Esos recursos generalmente se acceden a través de Internet utilizando un navegador web.</para>
    <para>El objetivo primordial de un despligue de servidor online es proporcionar un acceso estable a largo plazo y de alto rendimiento a los servicios ofrecidos. Cuando decidamos qué opción elegir para un entorno de servidor, deberemos considerar varios aspectos:</para>
    <orderedlist>
      <listitem>
        <para>La capacidad humana de administración y operación del servidor. Debe haber personal con habilidades genéricas para la administración de servidor y en las tecnologías específicas de la aplicación que provee servicios. Ejemplos de estas tecnologías son los servidores web y las plataformas de gestión de bases de datos.</para>
      </listitem>
      <listitem>
        <para>Soluciones fiables para copias de seguridad automatizadas, incluido un servidor local off y backup remoto.</para>
      </listitem>
      <listitem>
        <para>Conectividad estable y buen ancho de banda para el tráfico hacia y desde el servidor.</para>
      </listitem>
      <listitem>
        <para>Fuente de alimentación eléctrica estable, incluida una solución de backup.</para>
      </listitem>
      <listitem>
        <para>Entorno seguro para el servirod físico en términos de acceso, robo y fuego.</para>
      </listitem>
      <listitem>
        <para>Presencia de un plan de recuperación ante desastres. Este plan debe contener una estrategia realista para asegurar que el servicio solo sufrirá caídas breves en los casos de fallo hardware, caída de la red y otros.</para>
      </listitem>
      <listitem>
        <para>Hardware viable, potente y robusto.</para>
      </listitem>
    </orderedlist>
    <para>Todos estos aspectos deben cubrirse para crear un entorno de alojamiento apropiado. El requisito hardware se ha puesto en último lugar deliberadamente debido a que hay una tendencia clara a prestarle demasiada atención, habiendo otros factores más cruciales.</para>
    <para>Volviendo a las tres principales opciones de alojamiento, la experiencia de misiones de implementación en países en desarrollo sugiere que los aspectos citados rara vez están presentes en las opciones uno y dos a nivel viable. Alcanzar un nivel aceptable en todos esos aspectos es desafiante en términos de recursos humanos y dinero, especialmente al comparar con la tercera opción. Tiene el beneficio de que acomoda los aspectos políticos mencionados y crea capacidades locales para la administración de servidor, aunque por otro lado esto se puede lograr por otras vías.</para>
    <para>La opción tres - alojamiento externo - tiene la ventaja de que soporta todos los aspectos mencionados a un coste asequible. Muchos proveedores de hosting - de servidores virtuales o de servicios en la nube - ofrecen servicios fiables para lanzar la mayoría de aplicaciones posibles. Un ejemplo de estos proveedores son los servidores web de Linode y Amazon. La administración de esos servidores se realiza a través de una conexión de red, lo que sucede también muchas veces en el caso de la administración de un servidor local. La ubicación física del sercidor en este caso es irrelevante ya que esos proveedores ofrecen servicios en muchas partes del mundo. Esta solución se está convirtiendo en un estándar para el alojamiento de los servicios de aplicaciones. El aspecto de crear capacidad local para la administración de servidor es compatible con esta opción ya que un equipo local TIC puede asumir la tarea de mantenimiento del servidor alojado externamente.</para>
    <para>Una alternativa para combinar las ventajas del alojamiento externo con la necesidad de hosting local y propiedad física es usar un proveedor de hosting externo para el sistema de transacción primario, y copiar (mirror) este servidor a un servidor local no-crítico que se use para solo-lectura como el análisis de datos y que se acceda por una intranet.</para>
  </section>
  </section>
</section>

  <section>
    <title>Diferencias entre datos agregados y datos de paciente en un SIS</title>
    <para>Los <emphasis>datos de paciente</emphasis> son datos relativos a un paciente individual, como son su diagnóstico, nombre, edad, historial médico previo, etc. Estos datos generalmente se basan en la interacción individual entre el paciente y el trabajador de salud. Por ejemplo, cuando un paciente visita un centro de salud pueden registrarse gran variedad de detalles, como la temperatura del paciente, su peso, y diversos tests sanguíneaos. Si este paciente obtiene un diagnóstico de "Anemia deficiente Vitamina B12, no especificado" correspondiente al código CIE-10 D51.9, esta interacción concreta puede registrarse como una instancia de "Anemia" en un sistema de información agregada. Los datos de paciente son importantes cuando queremos hacer un seguimiento longitudinal del progreso de un paciente en el tiempo. Por ejemplo, si queremos seguir cómo un paciente se adhiere y responde a un proceso de tratamiento de TB (que generalmente tiene una duración de 6-9 meses), necesitaremos información de datos de paciente.</para>
    <para> Los 
   <emphasis>datos agregados</emphasis> son la consolidación de datos relativos a múltiples pacientes, y por tanto no se puede rastrear el origen de los datos de un paciente concreto. Se trata generalmente de conteos, como la incidencia de Malaria, TB y otras enfermedades. Típicamente, los datos rutinarios con los que trabaja un establecimiento de salud so este tipo de estadísticas agregadas, y se utilizan para la generación de reportes e indicadores rutinarios, y lo que es más importante, para la planificación estratégica en el sistema de salud. Los datos agregados no pueden proporcionar el tipo de información detallada que dan los datos de nivel de paciente, pero es crucial para la planificación y orientación del funcionamiento de los sistemas de salud.</para>
    <para>Digamos que entre unos y otros se encuentran los datos relativos a casos, o datos anónimos "de paciente". Es posible recoger numerosos detalles sobre el evento específico de salud sin necesidad de identificar al paciente involucrado. Las visitas de pacientes externos o internos, un nuevo caso de cólera, mortalidad materna, etc. son casos de uso comunes cuando queremos recopilar muchos más detalles que el mero conteo del número total de casos o visitas. Estos datos normalmente se registran en formularios en forma de listado, o en formularios de auditoría más detallados. Y estos datos de casos son diferentes de los datos agregados en el sentido de que contienen muchos detalles sobre un evento concreto, mientras que los datos agregados simplemente contarían cuántos eventos se producen de un cierto tipo, por ejemplo, cuántas visitas externas con diagnóstico principal "Malaria", o cuántas muertes maternas donde la fallecida no siguió el protocolo ANC, o cuántos brotes de cólera en niños menores de 5 años. En DHIS2 estos datos son recogidos mediante programas de tipo "evento único sin registro".</para>
    <para>Los datos de paciente son muy confidenciales y por tanto deben ser protegidos para que ninguna persona no autorizada pueda obtenerlos. Cuando están en papel, deben ser archivados en un lugar seguro. En computadoras, los datos de paciente necesitan sistemas seguros con contraseñas, acceso restringido y logs de seguimiento.</para>
    <para>La preocupación por la seguridad de datos agregados no es tan crucial como lo es para los datos de paciente, ya que generalmente es imposible identificar una persona en particular con una estadística agregada. Sin embargo, los datos también pueden ser mal usados o malinterpretados por otros, y no deberían distribuirse sin unas políticas de difusión de datos adecuadas.
     </para>
  </section>
  <section>
    <title>Software libre y de código abierto (FOSS): beneficios y retos</title>
    <para>El software lleva las instrucciones que indican a una computadora cómo funcionar. La forma legible y con autoría humana de esas instrucciones es denominada código fuente. Antes de que la computadora pueda realmente ejecutar las instrucciones, el código fuente debe traducirse en un formato legible por máquinas (binario), llamado código objeto. Todo el software disponible incluye el código objeto, pero <abbrev>FOSS</abbrev>publica también el código fuente.</para>
    <para>Los dueños de software propietario licencian su código objeto con copyright a un usuario, lo cual permite a éste ejecutar el programa. Los programas <abbrev>FOSS</abbrev>, sin embargo, licencian tanto el código objeto como el código fuente, permitiendo al usuario no sólo utilizarlo sino también modificar y tal vez distribuir los programas. Teniendo acceso al código fuente, los usuarios tienen la libertad de ejecutar el programa para cualquier fin, redistribuirlo, probar, adaptar, aprender de ello, personalizar el software para responder a sus necesidades, y volcar mejoras públicamente para el bien de la comunidad. Por lo tanto, algun FOSS es conocido también como software libre, donde "libre" se refiere primero y ante todo, a las libertades antes descritas que a un sentido monetario de la palabra (en relación a la gratuidad).</para>
    <para>En el sector de la salud pública, FOSS puede tener muchos beneficios, como por ejemplo:</para>
    <itemizedlist>
      <listitem>
        <para>Menores costes ya que no implica el pago de costes de licencia prohibitivos.</para>
      </listitem>
      <listitem>
        <para>Dado que las necesidades de información para el sector salud están en constante cambio y evolución, hay una necesidad de que el usuario tenga libertad para hacer los cambios según sus propios requisitos. Esto frecuentemente es muy limitado en sistemas propietarios.</para>
      </listitem>
      <listitem>
        <para>Acceso a código fuente para favorecer la integración e interoperabilidad. La interoperabilidad entre diferentes aplicaciones software en el sector salud está tomando importancia creciente, lo que significa permitir que dos o más sistemas compartan datos y metadatos. Este trabajo es mucho más fácil, y a veces dependiente del código fuente que se disponibiliza a los desarrolladores que hacen la integración. Esta disponibilidad frecuentemente no es posible en el caso del software propietario. Y cuando lo es, supone costes enormes y obligaciones contractuales.</para>
      </listitem>
      <listitem>
        <para>Las aplicaciones FOSS como DHIS2 típicamente están mantenidas por una red global de desarrolladores, y por tanto tiene acceso a conocimiento puntero en investigación y desarrollo (I+D).</para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
